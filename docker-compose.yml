version: "3.7"

networks:
    lookoutstationnet:
        name: lookoutstationnet
        driver: bridge
    web:
        name: web

volumes:
    postgres-data:

services:
    database:
        image: postgres:12
        container_name: lookoutstation-database
        hostname: lookoutstation-database
        networks:
            - lookoutstationnet
        env_file:
            - configs/postgres.env
        volumes:
            - "postgres-data:/var/lib/postgresql/data"

    redis:
      image: redis:latest
      container_name: lookoutstation-redis
      hostname: redis
      networks:
        - lookoutstationnet

    worker-master:
        build: worker-master/
        image: lookoutstation-worker-master:latest
        container_name: lookoutstation-worker-master
        hostname: lookoutstation-worker-master
        networks:
            - lookoutstationnet
        depends_on:
            - redis
            - api

    worker-scanner:
        build: worker-scanner/
        image: lookoutstation-worker-scanner:latest
        container_name: lookoutstation-worker-scanner
        hostname: lookoutstation-worker-scanner
        networks:
            - lookoutstationnet
        depends_on:
            - redis

    worker-feeder:
        build: worker-feeder/
        image: lookoutstation-worker-feeder:latest
        container_name: lookoutstation-worker-feeder
        hostname: lookoutstation-worker-feeder
        networks:
            - lookoutstationnet
        depends_on:
            - redis

    emailer:
        build: emailer/
        image: lookoutstation-emailer:latest
        container_name: lookoutstation-emailer
        hostname: lookoutstation-emailer
        networks:
            - lookoutstationnet
        env_file:
            - configs/email.env
        depends_on:
            - api

    api:
        build: api/
        image: lookoutstation-api:latest
        container_name: lookoutstation-api
        hostname: lookoutstation-api
        networks:
            - lookoutstationnet
            - web
        env_file:
            - configs/postgres.env
        environment:
            - FLASK_APP=main.py
        depends_on:
            - database
        labels:
            - "traefik.enable=true"
            # - "traefik.http.routers.backend.tls=true"
            - "traefik.http.routers.backend.rule=Host(`api.lookout.network`)"
            - "traefik.http.routers.backend.entrypoints=web"
            # - "traefik.http.routers.backend.tls.certresolver=mytlschallenge"

    frontend:
        build: frontend/
        image: lookoutstation-frontend:latest
        container_name: lookoutstation-frontend
        hostname: lookoutstation-frontend
        networks:
            - lookoutstationnet
            - web
        depends_on:
            - api
        labels:
            - "traefik.enable=true"
            # - "traefik.http.routers.frontend.tls=true"
            - "traefik.http.routers.frontend.rule=Host(`lookout.network`)"
            - "traefik.http.routers.frontend.entrypoints=web"
            # - "traefik.http.routers.frontend.tls.certresolver=mytlschallenge"

    traefik:
        image: traefik:2.2
        container_name: lookoutstation-traefik
        hostname: lookoutstation-traefik
        command:
            - --api.dashboard=true
            - --api.debug=true
            - --providers.docker=true
            - --providers.docker.exposedbydefault=false
            # - --providers.file.filename=/traefik/dynamic.yaml
            - --providers.docker.network=web
            - --entrypoints.web.address=:80
            - --entrypoints.web-secured.address=:443
            # - --entrypoints.web.http.redirections.entryPoint.to=web-secured
            # - --entrypoints.web.http.redirections.entryPoint.scheme=https
            # - --certificatesresolvers.mytlschallenge.acme.tlschallenge=true
            # - --certificatesresolvers.mytlschallenge.acme.email=nelsoncabeteff@icloud.com
            # - --certificatesresolvers.mytlschallenge.acme.storage=/traefik/acme.json
            # - --certificatesresolvers.mytlschallenge.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory # Enable when in DEV
        networks:
            - web
        ports:
            - "80:80"
            - "8080:8080"
            - "443:443"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.api.rule=Host(`monitor.lookout.network`)"
            - "traefik.http.routers.api.entrypoints=web"
            - "traefik.http.routers.api.service=api@internal"
            - "traefik.http.routers.api.middlewares=auth"
            - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$w4ZnFp0e$$3/oZEdJhPq2gTW1WFqNT60"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
            # - "./traefik/:/traefik"
